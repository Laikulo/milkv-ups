diff -wurpN --no-dereference -X diffgen.ignore test-tree/kernel/sched/core.c milky/kernel/sched/core.c
--- test-tree/kernel/sched/core.c	2024-06-01 13:47:59.458872873 -0400
+++ milky/kernel/sched/core.c	2024-05-21 05:22:27.000000000 -0400
@@ -24,6 +24,10 @@
 #include "../../fs/io-wq.h"
 #include "../smpboot.h"
 
+#ifdef CONFIG_SCHED_CVITEK
+#include "cvi_sched.h"
+#endif
+
 #include "pelt.h"
 #include "smp.h"
 
@@ -5492,7 +5496,9 @@ static int _sched_setscheduler(struct ta
 		policy &= ~SCHED_RESET_ON_FORK;
 		attr.sched_policy = policy;
 	}
-
+#ifdef CONFIG_SCHED_CVITEK
+	cvi_checkpriority(p, &attr);
+#endif
 	return __sched_setscheduler(p, &attr, check, true);
 }
 /**
@@ -5512,11 +5518,19 @@ int sched_setscheduler(struct task_struc
 {
 	return _sched_setscheduler(p, policy, param, true);
 }
+EXPORT_SYMBOL_GPL(sched_setscheduler);
 
+#ifdef CONFIG_SCHED_CVITEK
+int sched_setattr(struct task_struct *p, struct sched_attr *attr)
+{
+	cvi_checkpriority(p, attr);
+#else
 int sched_setattr(struct task_struct *p, const struct sched_attr *attr)
 {
+#endif
 	return __sched_setscheduler(p, attr, true, true);
 }
+EXPORT_SYMBOL_GPL(sched_setattr);
 
 int sched_setattr_nocheck(struct task_struct *p, const struct sched_attr *attr)
 {
@@ -5541,6 +5555,7 @@ int sched_setscheduler_nocheck(struct ta
 {
 	return _sched_setscheduler(p, policy, param, false);
 }
+EXPORT_SYMBOL_GPL(sched_setscheduler_nocheck);
 
 /*
  * SCHED_FIFO is a broken scheduler model; that is, it is fundamentally
